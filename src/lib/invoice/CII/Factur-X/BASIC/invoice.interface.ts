/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Invoice {
	'rsm:CrossIndustryInvoice': CrossIndustryInvoiceType;
	// -- only generated because of xmln etc attributes
	[k: string]: unknown;
}
export interface CrossIndustryInvoiceType {
	'rsm:ExchangedDocumentContext': ExchangedDocumentContextType;
	'rsm:ExchangedDocument': ExchangedDocumentType;
	'rsm:SupplyChainTradeTransaction': SupplyChainTradeTransactionType;
	[k: string]: unknown;
}
export interface ExchangedDocumentContextType {
	'ram:BusinessProcessSpecifiedDocumentContextParameter'?: DocumentContextParameterType;
	'ram:GuidelineSpecifiedDocumentContextParameter': DocumentContextParameterType;
}
export interface DocumentContextParameterType {
	'ram:ID': string;
}
export interface IDType {
	Value?: string | number;
	schemeID?: string;
}
export interface ExchangedDocumentType {
	'ram:ID': string;
	'ram:TypeCode': DocumentCodeType;
	'ram:IssueDateTime': DateTimeType;
	/**
	 * @minItems 0
	 */
	'ram:IncludedNote'?: NoteType[];
}
export interface DocumentCodeType {
	Value?: string | number;
}
export interface DateTimeType {
	'udt:DateTimeString': DateTimeType1;
}
export interface DateTimeType1 {
	Value?: string | number;
	format: string;
}
export interface NoteType {
	'ram:Content': TextType;
	'ram:SubjectCode'?: CodeType;
}
export interface TextType {
	Value?: string;
}
export interface CodeType {
	Value?: string | number;
}
export interface SupplyChainTradeTransactionType {
	/**
	 * @minItems 1
	 */
	'ram:IncludedSupplyChainTradeLineItem': [
		SupplyChainTradeLineItemType,
		...SupplyChainTradeLineItemType[]
	];
	'ram:ApplicableHeaderTradeAgreement': HeaderTradeAgreementType;
	'ram:ApplicableHeaderTradeDelivery': HeaderTradeDeliveryType;
	'ram:ApplicableHeaderTradeSettlement': HeaderTradeSettlementType;
}
export interface SupplyChainTradeLineItemType {
	'ram:AssociatedDocumentLineDocument': DocumentLineDocumentType;
	'ram:SpecifiedTradeProduct': TradeProductType;
	'ram:SpecifiedLineTradeAgreement': LineTradeAgreementType;
	'ram:SpecifiedLineTradeDelivery': LineTradeDeliveryType;
	'ram:SpecifiedLineTradeSettlement': LineTradeSettlementType;
}
export interface DocumentLineDocumentType {
	'ram:LineID': IDType;
	'ram:IncludedNote'?: NoteType;
}
export interface TradeProductType {
	'ram:GlobalID'?: IDType;
	'ram:Name': TextType;
}
export interface LineTradeAgreementType {
	'ram:GrossPriceProductTradePrice'?: TradePriceType;
	'ram:NetPriceProductTradePrice': TradePriceType;
}
export interface TradePriceType {
	'ram:ChargeAmount': AmountType;
	'ram:BasisQuantity'?: QuantityType;
	'ram:AppliedTradeAllowanceCharge'?: TradeAllowanceChargeType;
}
export interface AmountType {
	Value?: number;
	currencyID?: string;
}
export interface QuantityType {
	Value?: number;
	unitCode?: string;
}
export interface TradeAllowanceChargeType {
	'ram:ChargeIndicator': IndicatorType;
	'ram:CalculationPercent'?: PercentType;
	'ram:BasisAmount'?: AmountType;
	'ram:ActualAmount': AmountType;
	'ram:ReasonCode'?: AllowanceChargeReasonCodeType;
	'ram:Reason'?: TextType;
	'ram:CategoryTradeTax'?: TradeTaxType;
}
export interface IndicatorType {
	'udt:Indicator': boolean;
}
export interface PercentType {
	Value?: number;
}
export interface AllowanceChargeReasonCodeType {
	Value?: string;
}
export interface TradeTaxType {
	'ram:CalculatedAmount'?: AmountType;
	'ram:TypeCode': TaxTypeCodeType;
	'ram:ExemptionReason'?: TextType;
	'ram:BasisAmount'?: AmountType;
	'ram:CategoryCode': TaxCategoryCodeType;
	'ram:ExemptionReasonCode'?: CodeType;
	'ram:DueDateTypeCode'?: TimeReferenceCodeType;
	'ram:RateApplicablePercent'?: PercentType;
}
export interface TaxTypeCodeType {
	Value?: string;
}
export interface TaxCategoryCodeType {
	Value?: string;
}
export interface TimeReferenceCodeType {
	Value?: string;
}
export interface LineTradeDeliveryType {
	'ram:BilledQuantity': QuantityType;
}
export interface LineTradeSettlementType {
	'ram:ApplicableTradeTax': TradeTaxType;
	'ram:BillingSpecifiedPeriod'?: SpecifiedPeriodType;
	/**
	 * @minItems 0
	 */
	'ram:SpecifiedTradeAllowanceCharge'?: TradeAllowanceChargeType[];
	'ram:SpecifiedTradeSettlementLineMonetarySummation': TradeSettlementLineMonetarySummationType;
}
export interface SpecifiedPeriodType {
	'ram:StartDateTime'?: DateTimeType;
	'ram:EndDateTime'?: DateTimeType;
}
export interface TradeSettlementLineMonetarySummationType {
	'ram:LineTotalAmount': AmountType;
}
export interface HeaderTradeAgreementType {
	'ram:BuyerReference'?: TextType;
	'ram:SellerTradeParty': TradePartyType;
	'ram:BuyerTradeParty': TradePartyType;
	'ram:SellerTaxRepresentativeTradeParty'?: TradePartyType;
	'ram:BuyerOrderReferencedDocument'?: ReferencedDocumentType;
	'ram:ContractReferencedDocument'?: ReferencedDocumentType;
}
export interface TradePartyType {
	/**
	 * @minItems 0
	 */
	'ram:ID'?: IDType[];
	/**
	 * @minItems 0
	 */
	'ram:GlobalID'?: IDType[];
	'ram:Name'?: TextType;
	'ram:SpecifiedLegalOrganization'?: LegalOrganizationType;
	'ram:PostalTradeAddress'?: TradeAddressType;
	'ram:URIUniversalCommunication'?: UniversalCommunicationType;
	/**
	 * @minItems 0
	 * @maxItems 2
	 */
	'ram:SpecifiedTaxRegistration'?:
		| []
		| [TaxRegistrationType]
		| [TaxRegistrationType, TaxRegistrationType];
}
export interface LegalOrganizationType {
	'ram:ID'?: IDType;
	'ram:TradingBusinessName'?: TextType;
}
export interface TradeAddressType {
	'ram:PostcodeCode'?: CodeType;
	'ram:LineOne'?: TextType;
	'ram:LineTwo'?: TextType;
	'ram:LineThree'?: TextType;
	'ram:CityName'?: TextType;
	'ram:CountryID': CountryIDType;
	'ram:CountrySubDivisionName'?: TextType;
}
export interface CountryIDType {
	Value?: string;
}
export interface UniversalCommunicationType {
	'ram:URIID': IDType;
}
export interface TaxRegistrationType {
	'ram:ID': IDType;
}
export interface ReferencedDocumentType {
	'ram:IssuerAssignedID': IDType;
	'ram:FormattedIssueDateTime'?: FormattedDateTimeType;
}
export interface FormattedDateTimeType {
	DateTimeString: FormattedDateTimeType1;
}
export interface FormattedDateTimeType1 {
	Value?: string;
	format: string;
}
export interface HeaderTradeDeliveryType {
	'ram:ShipToTradeParty'?: TradePartyType;
	'ram:ActualDeliverySupplyChainEvent'?: SupplyChainEventType;
	'ram:DespatchAdviceReferencedDocument'?: ReferencedDocumentType;
}
export interface SupplyChainEventType {
	'ram:OccurrenceDateTime': DateTimeType;
}
export interface HeaderTradeSettlementType {
	'ram:CreditorReferenceID'?: IDType;
	'ram:PaymentReference'?: TextType;
	'ram:TaxCurrencyCode'?: CurrencyCodeType;
	'ram:InvoiceCurrencyCode': CurrencyCodeType;
	'ram:PayeeTradeParty'?: TradePartyType;
	/**
	 * @minItems 0
	 */
	'ram:SpecifiedTradeSettlementPaymentMeans'?: TradeSettlementPaymentMeansType[];
	/**
	 * @minItems 1
	 */
	'ram:ApplicableTradeTax': [TradeTaxType, ...TradeTaxType[]];
	'ram:BillingSpecifiedPeriod'?: SpecifiedPeriodType;
	/**
	 * @minItems 0
	 */
	'ram:SpecifiedTradeAllowanceCharge'?: TradeAllowanceChargeType[];
	'ram:SpecifiedTradePaymentTerms'?: TradePaymentTermsType;
	'ram:SpecifiedTradeSettlementHeaderMonetarySummation': TradeSettlementHeaderMonetarySummationType;
	/**
	 * @minItems 0
	 */
	'ram:InvoiceReferencedDocument'?: ReferencedDocumentType[];
	'ram:ReceivableSpecifiedTradeAccountingAccount'?: TradeAccountingAccountType;
}
export interface CurrencyCodeType {
	Value?: string;
}
export interface TradeSettlementPaymentMeansType {
	'ram:TypeCode': PaymentMeansCodeType;
	'ram:PayerPartyDebtorFinancialAccount'?: DebtorFinancialAccountType;
	'ram:PayeePartyCreditorFinancialAccount'?: CreditorFinancialAccountType;
}
export interface PaymentMeansCodeType {
	Value?: string;
}
export interface DebtorFinancialAccountType {
	'ram:IBANID': IDType;
}
export interface CreditorFinancialAccountType {
	'ram:IBANID'?: IDType;
	'ram:ProprietaryID'?: IDType;
}
export interface TradePaymentTermsType {
	'ram:Description'?: TextType;
	'ram:DueDateDateTime'?: DateTimeType;
	'ram:DirectDebitMandateID'?: IDType;
}
export interface TradeSettlementHeaderMonetarySummationType {
	'ram:LineTotalAmount': AmountType;
	'ram:ChargeTotalAmount'?: AmountType;
	'ram:AllowanceTotalAmount'?: AmountType;
	'ram:TaxBasisTotalAmount': AmountType;
	/**
	 * @minItems 0
	 * @maxItems 2
	 */
	'ram:TaxTotalAmount'?: [] | [AmountType] | [AmountType, AmountType];
	'ram:GrandTotalAmount': AmountType;
	'ram:TotalPrepaidAmount'?: AmountType;
	'ram:DuePayableAmount': AmountType;
}
export interface TradeAccountingAccountType {
	'ram:ID': IDType;
}
